<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myUser">

   <select id="checkEmail" parameterType="String" resultType="User">
      select * from users where userEmail=#{userEmail} 
      
   </select>
   
   <insert id="insertUser" parameterType="User">
      INSERT INTO users(userEmail,userName,userProfile) VALUES(#{userEmail},#{userName},#{userProfile})
   </insert>
   
   <select id="getUserNum" parameterType="String" resultType="Integer">
      select userNum from users where userEmail=#{userEmail}
   </select>
   
   <select id="getUserCharacter" parameterType="Integer" resultType="Integer">
      select userCharacter from users where userNum=#{userNum}
   </select>
   
    <update id="deleteUser" parameterType="HashMap">
   	  update users set isOut='Y',outDate=#{outDate} where userEmail=#{userEmail}
   </update> 

<!-- 회원탈퇴를 하면 isout이 n인지 data를 hashmap으로 받아오는 걸 -->

   <!-- resultMap의 일반적인 사용법  property에 vo의 field명, column에 db의 column명이 다를 때 사용한다. 둘을 맞춰주는 역할-->
   <!-- <resultMap id="result"
      type="my.spring.springweb.sample11.vo.Book">
      <result property="bookIsbn" column="bisbn" jdbcType="VARCHAR"
         javaType="String" />
      <result property="bookTitle" column="btitle" jdbcType="VARCHAR"
         javaType="String" />
      <result property="bookAuthor" column="bauthor" />
      <result property="bookPrice" column="bprice" />
   </resultMap>

   <select id="selectAll" resultMap="result">
       <![CDATA[   
         SELECT bisbn, btitle, bauthor, bprice
         FROM book         
      ]]>
   </select>

   <select id="selectBookByKeyword" parameterType="String"
      resultMap="result">
       <![CDATA[   
         SELECT bisbn, btitle, bauthor, bprice
         FROM book         
         WHERE btitle LIKE CONCAT('%', #{Keyword}, '%')
      ]]>
   </select> -->

</mapper>